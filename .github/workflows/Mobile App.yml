name: 'Mobile App'

on:
  workflow_dispatch:

env:
    DOTNETVERSION: 6.0.x
    AZURE_FUNCTIONAPP_PACKAGE_PATH: 'src/HydrantReportingService/Reporter/Reporter.csproj'   
    
jobs:
  buildAndroid:
      runs-on: windows-2022

      steps:
        - uses: actions/checkout@v2

        - name: Setup .NET SDK ${{env.DOTNETVERSION}}
          uses: actions/setup-dotnet@v1
          with:
            dotnet-version:  '${{env.DOTNETVERSION}}'

        - name: List installed .NET info
          shell: pwsh
          run: dotnet --info

        - name: Install .NET MAUI
          shell: bash
          run: |
            dotnet nuget locals all --clear 
            dotnet workload install maui --source https://aka.ms/dotnet6/nuget/index.json --source https://api.nuget.org/v3/index.json
            dotnet workload install android ios maccatalyst tvos macos maui wasm-tools --source https://aka.ms/dotnet6/nuget/index.json --source https://api.nuget.org/v3/index.json

        - name: Restore nuget packages
          run: |
             dotnet restore ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}

          # https://docs.microsoft.com/en-us/dotnet/maui/android/deployment/overview
        - name : Build Android App
          shell: bash
          run: |
            dotnet publish ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }} -f:net6.0-android -c:Release -o ./output
            
        # # Store Android Signing Keystore and password in Secrets using base64 encoding
        # # https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/certutil
        # # commandline util to encode to base64 on windows
        - name: Extract Android signing key from env
          shell: bash
          run: |
            echo "${{ secrets.RELEASE_KEYSTORE }}" > android/release.jks.base64
            base64 -d android/release.jks.base64 > android/release.decrypted.jks

        # # check android SDK paths etc in installed VM : https://github.com/actions/virtual-environments#available-environments
        - name: Sign dev build
          shell: bash
          run: jarsigner -keystore android/release.decrypted.jks -storepass "${{ secrets.RELEASE_KEYSTORE_PASSWORD }}" -signedjar ./android/app/build/outputs/bundle/release/app-release-signed.aab ./android/app/build/outputs/bundle/release/app-release.aab release

        - uses: actions/upload-artifact@v2
          with:
            name: artifacts-android
            path: |
              ./output/*.apk
